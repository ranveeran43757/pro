-- LocalScript in StarterPlayer -> StarterPlayerScripts
-- Universal Item Stealer - Steal items from other players

print("‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏° Universal ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...")

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local backpack = player:WaitForChild("Backpack")
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")

-- Animation Settings
local animationSpeed = 0.5
local bounceStyle = Enum.EasingStyle.Back
local smoothStyle = Enum.EasingStyle.Quart

-- Update character when respawned
player.CharacterAdded:Connect(function(newChar)
    char = newChar
    humanoid = newChar:WaitForChild("Humanoid")
    backpack = player:WaitForChild("Backpack") -- Update backpack reference too
    print("Character updated:", player.Name)
    print("Humanoid updated successfully")
end)

print("Player:", player.Name)
print("Services loaded successfully")

-- Data variables
local selectedTool = nil
local allItems = {}
local autoStealEnabled = false

-- Scan all items function (New)
local function scanAllItems()
    print("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...")
    
    -- Clear old item list
    for _, child in ipairs(itemsFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    allItems = {}
    local searchTerm = searchBox.Text:lower()
    
    -- Search through all players
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player then -- Don't include own items
            
            -- Search in Backpack
            if otherPlayer.Backpack then
                for _, tool in ipairs(otherPlayer.Backpack:GetChildren()) do
                    if tool:IsA("Tool") then
                        local toolName = tool.Name:lower()
                        if searchTerm == "" or toolName:find(searchTerm) then
                            table.insert(allItems, {
                                tool = tool,
                                player = otherPlayer,
                                location = "üíº ‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤",
                                playerName = otherPlayer.Name
                            })
                        end
                    end
                end
            end
            
            -- Search in Hand
            if otherPlayer.Character then
                for _, tool in ipairs(otherPlayer.Character:GetChildren()) do
                    if tool:IsA("Tool") then
                        local toolName = tool.Name:lower()
                        if searchTerm == "" or toolName:find(searchTerm) then
                            table.insert(allItems, {
                                tool = tool,
                                player = otherPlayer,
                                location = "‚úã ‡∏°‡∏∑‡∏≠",
                                playerName = otherPlayer.Name
                            })
                        end
                    end
                end
            end
        end
    end
    
    print("‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:", #allItems, "‡∏ä‡∏¥‡πâ‡∏ô")
    
    if #allItems == 0 then
        if searchTerm ~= "" then
            feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö '" .. searchBox.Text .. "'"
        else
            feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå"
        end
        return
    end
    
    -- Sort by player name then by item name
    table.sort(allItems, function(a, b) 
        if a.playerName == b.playerName then
            return a.tool.Name < b.tool.Name
        end
        return a.playerName < b.playerName
    end)
    
    -- Create buttons for all items
    for i, itemData in ipairs(allItems) do
        local btn = Instance.new("TextButton")
        btn.Parent = itemsFrame
        btn.LayoutOrder = i
        btn.Size = UDim2.new(1, -10, 0, 35)
        btn.Position = UDim2.new(0, 5, 0, 0)
        btn.Text = itemData.tool.Name .. " | " .. itemData.playerName .. " " .. itemData.location
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.TextScaled = true
        btn.Font = Enum.Font.GothamSemibold
        btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        btn.BackgroundTransparency = 0.3
        btn.BorderSizePixel = 0
        
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 8)
        btnCorner.Parent = btn
        
        local btnStroke = Instance.new("UIStroke")
        btnStroke.Color = Color3.fromRGB(255, 150, 0)
        btnStroke.Thickness = 1
        btnStroke.Transparency = 0.7
        btnStroke.Parent = btn
        
        btn.MouseButton1Click:Connect(function()
            selectedTool = itemData
            print("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°:", itemData.tool.Name, "‡∏à‡∏≤‡∏Å", itemData.player.Name)
            
            -- Reset all button colors
            for _, c in ipairs(itemsFrame:GetChildren()) do
                if c:IsA("TextButton") then 
                    c.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                    c.BackgroundTransparency = 0.3
                end
            end
            
            -- Change selected button color
            btn.BackgroundColor3 = Color3.fromRGB(255, 50, 100)
            btn.BackgroundTransparency = 0.1
            feedback.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß: " .. itemData.tool.Name .. " ‡∏à‡∏≤‡∏Å " .. itemData.player.Name
        end)
    end
    
    -- Update Canvas Size
    itemsFrame.CanvasSize = UDim2.new(0, 0, 0, itemsLayout.AbsoluteContentSize.Y + 10)
    if searchTerm ~= "" then
        feedback.Text = "‡∏û‡∏ö " .. #allItems .. " ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö '" .. searchBox.Text .. "'"
    else
        feedback.Text = "‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î " .. #allItems .. " ‡∏ä‡∏¥‡πâ‡∏ô ‡∏à‡∏≤‡∏Å " .. (#Players:GetPlayers() - 1) .. " ‡∏Ñ‡∏ô"
    end
end

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UniversalItemStealer"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = playerGui

-- Toggle Button (Always visible)
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleButton"
toggleBtn.Size = UDim2.new(0, 60, 0, 60)
toggleBtn.Position = UDim2.new(0, 20, 0, 20)
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleBtn.BackgroundTransparency = 0.3
toggleBtn.Text = "‚ö°"
toggleBtn.TextColor3 = Color3.fromRGB(0, 255, 255)
toggleBtn.TextScaled = true
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.BorderSizePixel = 0
toggleBtn.ZIndex = 1000
toggleBtn.Parent = screenGui

local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 30)
toggleCorner.Parent = toggleBtn

-- Glow Effect for Toggle Button
local toggleGlow = Instance.new("ImageLabel")
toggleGlow.Name = "Glow"
toggleGlow.Size = UDim2.new(1, 20, 1, 20)
toggleGlow.Position = UDim2.new(0, -10, 0, -10)
toggleGlow.BackgroundTransparency = 1
toggleGlow.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
toggleGlow.ImageColor3 = Color3.fromRGB(0, 255, 255)
toggleGlow.ImageTransparency = 0.7
toggleGlow.ZIndex = 999
toggleGlow.Parent = toggleBtn

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 420, 0, 720)
mainFrame.Position = UDim2.new(0.5, -210, 0.5, -360)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BackgroundTransparency = 0.15
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Visible = false
mainFrame.Parent = screenGui

-- Add corner for beauty
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 15)
corner.Parent = mainFrame

-- Glass Effect Border
local glassBorder = Instance.new("UIStroke")
glassBorder.Color = Color3.fromRGB(255, 255, 255)
glassBorder.Transparency = 0.8
glassBorder.Thickness = 2
glassBorder.Parent = mainFrame

-- Animated Gradient Background
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 50, 100)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(50, 0, 100)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 0, 50))
}
gradient.Rotation = 45
gradient.Transparency = NumberSequence.new{
    NumberSequenceKeypoint.new(0, 0.7),
    NumberSequenceKeypoint.new(0.5, 0.9),
    NumberSequenceKeypoint.new(1, 0.7)
}
gradient.Parent = mainFrame

-- Enable Dragging
local dragging = false
local dragStart, startPos, dragInput

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or
       input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 50)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
titleBar.BackgroundTransparency = 0.3
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 15)
titleCorner.Parent = titleBar

-- Title Gradient
local titleGradient = Instance.new("UIGradient")
titleGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 150)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 150, 255))
}
titleGradient.Rotation = 90
titleGradient.Transparency = NumberSequence.new{
    NumberSequenceKeypoint.new(0, 0.5),
    NumberSequenceKeypoint.new(1, 0.8)
}
titleGradient.Parent = titleBar

-- Title Text
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -50, 1, 0)
title.Position = UDim2.new(0, 15, 0, 0)
title.BackgroundTransparency = 1
title.Text = "üöÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏° Universal"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 35, 0, 35)
closeBtn.Position = UDim2.new(1, -42, 0, 7.5)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
closeBtn.BackgroundTransparency = 0.2
closeBtn.Text = "‚úï"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextScaled = true
closeBtn.Font = Enum.Font.GothamBold
closeBtn.BorderSizePixel = 0
closeBtn.Parent = titleBar

local closeBtnCorner = Instance.new("UICorner")
closeBtnCorner.CornerRadius = UDim.new(0, 17.5)
closeBtnCorner.Parent = closeBtn

-- Close Button Glow
local closeBtnStroke = Instance.new("UIStroke")
closeBtnStroke.Color = Color3.fromRGB(255, 100, 100)
closeBtnStroke.Thickness = 2
closeBtnStroke.Transparency = 0.6
closeBtnStroke.Parent = closeBtn

closeBtn.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    print("GUI ‡∏ñ‡∏π‡∏Å‡∏ã‡πà‡∏≠‡∏ô")
end)

-- Toggle UI visibility with animation
local isUIVisible = false
toggleBtn.MouseButton1Click:Connect(function()
    isUIVisible = not isUIVisible
    
    -- Animation effect for toggle button
    local targetColor = isUIVisible and Color3.fromRGB(0, 255, 100) or Color3.fromRGB(255, 100, 0)
    local toggleTween = TweenService:Create(toggleBtn, 
        TweenInfo.new(0.3, Enum.EasingStyle.Bounce, Enum.EasingDirection.Out),
        {BackgroundColor3 = targetColor}
    )
    toggleTween:Play()
    
    -- Main frame animation
    if isUIVisible then
        mainFrame.Visible = true
        mainFrame.Size = UDim2.new(0, 0, 0, 0)
        mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        
        local openTween = TweenService:Create(mainFrame,
            TweenInfo.new(animationSpeed, bounceStyle, Enum.EasingDirection.Out),
            {
                Size = UDim2.new(0, 420, 0, 720),
                Position = UDim2.new(0.5, -210, 0.5, -360)
            }
        )
        openTween:Play()
    else
        local closeTween = TweenService:Create(mainFrame,
            TweenInfo.new(animationSpeed * 0.7, smoothStyle, Enum.EasingDirection.In),
            {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            }
        )
        closeTween:Play()
        
        closeTween.Completed:Connect(function()
            mainFrame.Visible = false
        end)
    end
    
    print(isUIVisible and "GUI ‡πÄ‡∏õ‡∏¥‡∏î" or "GUI ‡∏õ‡∏¥‡∏î")
end)

-- Scan Range Slider (Hidden/Removed)
-- local rangeLabel = Instance.new("TextLabel")
-- local rangeSlider = Instance.new("TextBox")

-- Item Search Box
local searchLabel = Instance.new("TextLabel")
searchLabel.Size = UDim2.new(1, -30, 0, 30)
searchLabel.Position = UDim2.new(0, 15, 0, 60)
searchLabel.BackgroundTransparency = 1
searchLabel.Text = "üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏≠‡πÄ‡∏ó‡∏°:"
searchLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
searchLabel.TextScaled = true
searchLabel.Font = Enum.Font.GothamSemibold
searchLabel.TextXAlignment = Enum.TextXAlignment.Left
searchLabel.Parent = mainFrame

local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1, -30, 0, 35)
searchBox.Position = UDim2.new(0, 15, 0, 90)
searchBox.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
searchBox.BackgroundTransparency = 0.3
searchBox.BorderSizePixel = 0
searchBox.PlaceholderText = "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤... (‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)"
searchBox.Text = ""
searchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
searchBox.TextScaled = true
searchBox.Font = Enum.Font.Gotham
searchBox.Parent = mainFrame

local searchCorner = Instance.new("UICorner")
searchCorner.CornerRadius = UDim.new(0, 10)
searchCorner.Parent = searchBox

local searchStroke = Instance.new("UIStroke")
searchStroke.Color = Color3.fromRGB(255, 150, 0)
searchStroke.Thickness = 1
searchStroke.Transparency = 0.5
searchStroke.Parent = searchBox

-- Scan Button
local scanBtn = Instance.new("TextButton")
scanBtn.Size = UDim2.new(1, -30, 0, 40)
scanBtn.Position = UDim2.new(0, 15, 0, 135)
scanBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
scanBtn.BackgroundTransparency = 0.2
scanBtn.Text = "üîç ‡πÅ‡∏™‡∏Å‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
scanBtn.TextColor3 = Color3.new(1, 1, 1)
scanBtn.TextScaled = true
scanBtn.Font = Enum.Font.GothamBold
scanBtn.BorderSizePixel = 0
scanBtn.Parent = mainFrame

local scanCorner = Instance.new("UICorner")
scanCorner.CornerRadius = UDim.new(0, 10)
scanCorner.Parent = scanBtn

local scanStroke = Instance.new("UIStroke")
scanStroke.Color = Color3.fromRGB(100, 200, 255)
scanStroke.Thickness = 2
scanStroke.Transparency = 0.6
scanStroke.Parent = scanBtn

-- Items List Frame (Larger to show all items)
local itemsFrame = Instance.new("ScrollingFrame")
itemsFrame.Size = UDim2.new(1, -30, 0, 280)
itemsFrame.Position = UDim2.new(0, 15, 0, 185)
itemsFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
itemsFrame.BackgroundTransparency = 0.2
itemsFrame.BorderSizePixel = 0
itemsFrame.ScrollBarThickness = 6
itemsFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 150, 0)
itemsFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
itemsFrame.Parent = mainFrame

local itemsCorner = Instance.new("UICorner")
itemsCorner.CornerRadius = UDim.new(0, 10)
itemsCorner.Parent = itemsFrame

local itemsStroke = Instance.new("UIStroke")
itemsStroke.Color = Color3.fromRGB(255, 200, 100)
itemsStroke.Thickness = 1
itemsStroke.Transparency = 0.7
itemsStroke.Parent = itemsFrame

local itemsLayout = Instance.new("UIListLayout")
itemsLayout.Parent = itemsFrame
itemsLayout.SortOrder = Enum.SortOrder.LayoutOrder
itemsLayout.Padding = UDim.new(0, 5)

-- Steal Button
local stealBtn = Instance.new("TextButton")
stealBtn.Size = UDim2.new(1, -30, 0, 45)
stealBtn.Position = UDim2.new(0, 15, 0, 475)
stealBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 100)
stealBtn.BackgroundTransparency = 0.2
stealBtn.Text = "üíé ‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"
stealBtn.TextColor3 = Color3.new(1, 1, 1)
stealBtn.TextScaled = true
stealBtn.Font = Enum.Font.GothamBold
stealBtn.BorderSizePixel = 0
stealBtn.Parent = mainFrame

local stealBtnCorner = Instance.new("UICorner")
stealBtnCorner.CornerRadius = UDim.new(0, 10)
stealBtnCorner.Parent = stealBtn

local stealBtnStroke = Instance.new("UIStroke")
stealBtnStroke.Color = Color3.fromRGB(255, 100, 150)
stealBtnStroke.Thickness = 2
stealBtnStroke.Transparency = 0.6
stealBtnStroke.Parent = stealBtn

-- Steal All from Selected Player Button (Removed)
-- Steal All from Everyone Button
local stealAllBtn = Instance.new("TextButton")
stealAllBtn.Size = UDim2.new(1, -30, 0, 45)
stealAllBtn.Position = UDim2.new(0, 15, 0, 530)
stealAllBtn.BackgroundColor3 = Color3.fromRGB(150, 50, 255)
stealAllBtn.BackgroundTransparency = 0.2
stealAllBtn.Text = "üíÄ ‡∏Ç‡πÇ‡∏°‡∏¢‡∏ó‡∏∏‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô"
stealAllBtn.TextColor3 = Color3.new(1, 1, 1)
stealAllBtn.TextScaled = true
stealAllBtn.Font = Enum.Font.GothamBold
stealAllBtn.BorderSizePixel = 0
stealAllBtn.Parent = mainFrame

local stealAllBtnCorner = Instance.new("UICorner")
stealAllBtnCorner.CornerRadius = UDim.new(0, 10)
stealAllBtnCorner.Parent = stealAllBtn

local stealAllBtnStroke = Instance.new("UIStroke")
stealAllBtnStroke.Color = Color3.fromRGB(200, 100, 255)
stealAllBtnStroke.Thickness = 2
stealAllBtnStroke.Transparency = 0.6
stealAllBtnStroke.Parent = stealAllBtn

-- Auto Steal Button (New)
local autoStealBtn = Instance.new("TextButton")
autoStealBtn.Size = UDim2.new(1, -30, 0, 45)
autoStealBtn.Position = UDim2.new(0, 15, 0, 585)
autoStealBtn.BackgroundColor3 = Color3.fromRGB(255, 150, 0)
autoStealBtn.BackgroundTransparency = 0.2
autoStealBtn.Text = "‚ö° ‡∏Ç‡πÇ‡∏°‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡∏õ‡∏¥‡∏î)"
autoStealBtn.TextColor3 = Color3.new(1, 1, 1)
autoStealBtn.TextScaled = true
autoStealBtn.Font = Enum.Font.GothamBold
autoStealBtn.BorderSizePixel = 0
autoStealBtn.Parent = mainFrame

local autoStealBtnCorner = Instance.new("UICorner")
autoStealBtnCorner.CornerRadius = UDim.new(0, 10)
autoStealBtnCorner.Parent = autoStealBtn

local autoStealBtnStroke = Instance.new("UIStroke")
autoStealBtnStroke.Color = Color3.fromRGB(255, 200, 100)
autoStealBtnStroke.Thickness = 2
autoStealBtnStroke.Transparency = 0.6
autoStealBtnStroke.Parent = autoStealBtn

-- Feedback Label
local feedback = Instance.new("TextLabel")
feedback.Size = UDim2.new(1, -30, 0, 20)
feedback.Position = UDim2.new(0, 15, 1, -50)
feedback.BackgroundTransparency = 1
feedback.Text = "‡∏Ñ‡∏•‡∏¥‡∏Å‡∏™‡πÅ‡∏Å‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå"
feedback.TextColor3 = Color3.fromRGB(255, 255, 100)
feedback.TextScaled = true
feedback.Font = Enum.Font.GothamSemibold
feedback.TextWrapped = true
feedback.Parent = mainFrame

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -30, 0, 20)
statusLabel.Position = UDim2.new(0, 15, 1, -25)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextWrapped = true
statusLabel.Parent = mainFrame

print("UI Elements ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß")

-- Rainbow Animation for Gradient
spawn(function()
    while screenGui.Parent do
        for i = 0, 360, 2 do
            if not screenGui.Parent then break end
            gradient.Rotation = i
            if titleGradient then
                titleGradient.Rotation = -i
            end
            task.wait(0.05)
        end
    end
end)

-- Pulse Animation for Toggle Button
spawn(function()
    while screenGui.Parent do
        local pulseTween = TweenService:Create(toggleGlow,
            TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            {ImageTransparency = 0.3}
        )
        pulseTween:Play()
        task.wait(1)
        
        local fadeBack = TweenService:Create(toggleGlow,
            TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),
            {ImageTransparency = 0.9}
        )
        fadeBack:Play()
        task.wait(1)
    end
end)

-- Distance calculation function
local function getDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

-- Scan nearby players function
local function scanNearbyPlayers()
    print("Scanning for players...")
    
    -- Update character reference
    char = player.Character
    
    -- Clear old list
    for _, child in ipairs(playersFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    for _, child in ipairs(itemsFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    nearbyPlayers = {}
    local scanRange = tonumber(rangeSlider.Text) or 50
    scanRange = math.clamp(scanRange, 10, 200)
    rangeLabel.Text = "üéØ ‡∏£‡∏∞‡∏¢‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô: " .. scanRange .. " ‡∏´‡∏ô‡πà‡∏ß‡∏¢"
    
    if not char or not char:FindFirstChild("HumanoidRootPart") then
        feedback.Text = "Your character not found"
        return
    end
    
    local myPos = char.HumanoidRootPart.Position
    
    -- Find nearby players
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local otherChar = otherPlayer.Character
            local otherRoot = otherChar:FindFirstChild("HumanoidRootPart")
            
            if otherRoot then
                local distance = getDistance(myPos, otherRoot.Position)
                
                if distance <= scanRange then
                    table.insert(nearbyPlayers, {
                        player = otherPlayer,
                        distance = distance,
                        character = otherChar
                    })
                end
            end
        end
    end
    
    print("Found nearby players:", #nearbyPlayers, "players")
    
    if #nearbyPlayers == 0 then
        feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞ " .. scanRange .. " ‡∏´‡∏ô‡πà‡∏ß‡∏¢"
        return
    end
    
    -- Sort by distance
    table.sort(nearbyPlayers, function(a, b) return a.distance < b.distance end)
    
    -- Create buttons for each player
    for i, playerData in ipairs(nearbyPlayers) do
        local btn = Instance.new("TextButton")
        btn.Parent = playersFrame
        btn.LayoutOrder = i
        btn.Size = UDim2.new(1, -10, 0, 35)
        btn.Position = UDim2.new(0, 5, 0, 0)
        btn.Text = playerData.player.Name .. " (" .. math.floor(playerData.distance) .. "‡∏°.)"
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.TextScaled = true
        btn.Font = Enum.Font.GothamSemibold
        btn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        btn.BackgroundTransparency = 0.3
        btn.BorderSizePixel = 0
        
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 8)
        btnCorner.Parent = btn
        
        local btnStroke = Instance.new("UIStroke")
        btnStroke.Color = Color3.fromRGB(100, 200, 255)
        btnStroke.Thickness = 1
        btnStroke.Transparency = 0.7
        btnStroke.Parent = btn
        
        btn.MouseButton1Click:Connect(function()
            selectedPlayer = playerData
            print("Selected player:", playerData.player.Name)
            
            -- Reset all button colors
            for _, c in ipairs(playersFrame:GetChildren()) do
                if c:IsA("TextButton") then 
                    c.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                    c.BackgroundTransparency = 0.3
                end
            end
            
            -- Change selected button color
            btn.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
            btn.BackgroundTransparency = 0.1
            
            -- Show items of selected player
            showPlayerItems(playerData)
        end)
    end
    
    -- Update Canvas Size
    playersFrame.CanvasSize = UDim2.new(0, 0, 0, playersLayout.AbsoluteContentSize.Y + 10)
    feedback.Text = "‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: " .. #nearbyPlayers .. " ‡∏Ñ‡∏ô"
end

-- Show player items function
local function showPlayerItems(playerData)
    print("Viewing items of:", playerData.player.Name)
    
    -- Update character reference to get latest data
    if playerData.player == player then
        playerData.character = player.Character
    end
    
    -- Clear old item list
    for _, child in ipairs(itemsFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    local items = {}
    local searchTerm = searchBox.Text:lower()
    
    -- Find items from Backpack
    if playerData.player.Backpack then
        for _, tool in ipairs(playerData.player.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                local toolName = tool.Name:lower()
                if searchTerm == "" or toolName:find(searchTerm) then
                    table.insert(items, {tool = tool, location = "Backpack"})
                end
            end
        end
    end
    
    -- Find items being held - Update character reference
    local currentChar = playerData.player.Character
    if currentChar then
        for _, tool in ipairs(currentChar:GetChildren()) do
            if tool:IsA("Tool") then
                local toolName = tool.Name:lower()
                if searchTerm == "" or toolName:find(searchTerm) then
                    table.insert(items, {tool = tool, location = "Hand"})
                end
            end
        end
    end
    
    print("Found items of", playerData.player.Name .. ":", #items, "items")
    
    if #items == 0 then
        if searchTerm ~= "" then
            feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö '" .. searchBox.Text .. "' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö " .. playerData.player.Name
        else
            feedback.Text = playerData.player.Name .. " ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°"
        end
        return
    end
    
    -- Create buttons for each item
    for i, itemData in ipairs(items) do
        local btn = Instance.new("TextButton")
        btn.Parent = itemsFrame
        btn.LayoutOrder = i
        btn.Size = UDim2.new(1, -10, 0, 35)
        btn.Position = UDim2.new(0, 5, 0, 0)
        btn.Text = itemData.tool.Name .. " (" .. itemData.location .. ")"
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.TextScaled = true
        btn.Font = Enum.Font.GothamSemibold
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        btn.BorderSizePixel = 0
        
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 4)
        btnCorner.Parent = btn
        
        btn.MouseButton1Click:Connect(function()
            selectedTool = itemData
            print("Selected item:", itemData.tool.Name)
            
            -- Reset all button colors
            for _, c in ipairs(itemsFrame:GetChildren()) do
                if c:IsA("TextButton") then 
                    c.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
                end
            end
            
            -- Change selected button color
            btn.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
            feedback.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß: " .. itemData.tool.Name .. " ‡∏à‡∏≤‡∏Å " .. playerData.player.Name
        end)
    end
    
    -- Update Canvas Size
    itemsFrame.CanvasSize = UDim2.new(0, 0, 0, itemsLayout.AbsoluteContentSize.Y + 10)
    feedback.Text = playerData.player.Name .. " ‡∏°‡∏µ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°: " .. #items .. " ‡∏ä‡∏¥‡πâ‡∏ô"
end

-- Search for specific item across all players
local function searchForItem()
    local searchTerm = searchBox.Text:lower()
    if searchTerm == "" then
        feedback.Text = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"
        return
    end
    
    print("Searching for item:", searchBox.Text)
    
    -- Clear old lists
    for _, child in ipairs(playersFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    for _, child in ipairs(itemsFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    local foundItems = {}
    local scanRange = tonumber(rangeSlider.Text) or 50
    scanRange = math.clamp(scanRange, 10, 200)
    
    -- Update character reference
    char = player.Character
    
    if not char or not char:FindFirstChild("HumanoidRootPart") then
        feedback.Text = "Your character not found"
        return
    end
    
    local myPos = char.HumanoidRootPart.Position
    
    -- Search through all players
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer.Character then
            local otherChar = otherPlayer.Character
            local otherRoot = otherChar:FindFirstChild("HumanoidRootPart")
            local distance = otherRoot and getDistance(myPos, otherRoot.Position) or math.huge
            
            -- Search in Backpack
            if otherPlayer.Backpack then
                for _, tool in ipairs(otherPlayer.Backpack:GetChildren()) do
                    if tool:IsA("Tool") then
                        local toolName = tool.Name:lower()
                        if toolName:find(searchTerm) then
                            table.insert(foundItems, {
                                tool = tool,
                                player = otherPlayer,
                                location = "Backpack",
                                distance = distance,
                                character = otherChar
                            })
                        end
                    end
                end
            end
            
            -- Search in Hand
            for _, tool in ipairs(otherChar:GetChildren()) do
                if tool:IsA("Tool") then
                    local toolName = tool.Name:lower()
                    if toolName:find(searchTerm) then
                        table.insert(foundItems, {
                            tool = tool,
                            player = otherPlayer,
                            location = "Hand",
                            distance = distance,
                            character = otherChar
                        })
                    end
                end
            end
        end
    end
    
    print("Found", #foundItems, "items matching:", searchBox.Text)
    
    if #foundItems == 0 then
        feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö '" .. searchBox.Text .. "'"
        return
    end
    
    -- Sort by distance
    table.sort(foundItems, function(a, b) return a.distance < b.distance end)
    
    -- Create buttons for found items
    for i, itemData in ipairs(foundItems) do
        local btn = Instance.new("TextButton")
        btn.Parent = itemsFrame
        btn.LayoutOrder = i
        btn.Size = UDim2.new(1, -10, 0, 35)
        btn.Position = UDim2.new(0, 5, 0, 0)
        
        local distanceText = itemData.distance < math.huge and (" [" .. math.floor(itemData.distance) .. "m]") or " [Far]"
        btn.Text = itemData.tool.Name .. " (" .. itemData.location .. ") - " .. itemData.player.Name .. distanceText
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.TextScaled = true
        btn.Font = Enum.Font.GothamSemibold
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        btn.BorderSizePixel = 0
        
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 4)
        btnCorner.Parent = btn
        
        btn.MouseButton1Click:Connect(function()
            selectedTool = itemData
            selectedPlayer = {
                player = itemData.player,
                distance = itemData.distance,
                character = itemData.character
            }
            print("Selected item:", itemData.tool.Name, "from", itemData.player.Name)
            
            -- Reset all button colors
            for _, c in ipairs(itemsFrame:GetChildren()) do
                if c:IsA("TextButton") then 
                    c.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
                end
            end
            
            -- Change selected button color
            btn.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
            feedback.Text = "Selected: " .. itemData.tool.Name .. " from " .. itemData.player.Name
        end)
    end
    
    -- Update Canvas Size
    itemsFrame.CanvasSize = UDim2.new(0, 0, 0, itemsLayout.AbsoluteContentSize.Y + 10)
    feedback.Text = "‡∏û‡∏ö " .. #foundItems .. " ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö '" .. searchBox.Text .. "'"
end

-- Steal item function
local function stealItem()
    print("Starting theft...")
    
    if not selectedPlayer then
        feedback.Text = "Please select a player first"
        return
    end
    
    if not selectedTool then
        feedback.Text = "Please select an item first"
        return
    end
    
    local targetTool = selectedTool.tool
    
    if not targetTool or not targetTool.Parent then
        feedback.Text = "Item is gone"
        return
    end
    
    print("Stealing:", targetTool.Name, "from", selectedPlayer.player.Name)
    
    -- Try stealing with different methods
    local success = false
    
    -- Method 1: Clone and move
    pcall(function()
        local clonedTool = targetTool:Clone()
        clonedTool.Parent = backpack
        success = true
        print("Successful theft using Clone method")
    end)
    
    -- Method 2: Direct parent change
    if not success then
        pcall(function()
            targetTool.Parent = backpack
            success = true
            print("Successful theft using Parent Change method")
        end)
    end
    
    -- Method 3: Use FireServer (for games with RemoteEvent)
    if not success then
        pcall(function()
            for _, obj in ipairs(game:GetDescendants()) do
                if obj:IsA("RemoteEvent") and obj.Name:lower():find("tool") or obj.Name:lower():find("item") then
                    obj:FireServer("give", targetTool.Name, player)
                    success = true
                    print("Request sent via RemoteEvent:", obj.Name)
                    break
                end
            end
        end)
    end
    
    if success then
        feedback.Text = ("Stole \"%s\" from %s successfully!"):format(targetTool.Name, selectedPlayer.player.Name)
        
        -- Force equip the stolen item to make it visible
        pcall(function()
            if humanoid and targetTool.Parent == backpack then
                humanoid:EquipTool(targetTool)
                print("Equipped stolen item:", targetTool.Name)
            end
        end)
        
        -- Auto update list
        task.wait(0.5)
        if selectedPlayer then
            showPlayerItems(selectedPlayer)
        end
    else
        feedback.Text = "Cannot steal - server has protection"
    end
end

-- Steal all items from everyone function (Updated)
local function stealAllItems()
    print("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡πÇ‡∏°‡∏¢‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô...")
    feedback.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå..."
    statusLabel.Text = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡πÇ‡∏°‡∏¢‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô..."
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 100)
    
    local totalStolen = 0
    
    -- Go through all players
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player then
            
            -- Steal from Backpack
            if otherPlayer.Backpack then
                for _, tool in ipairs(otherPlayer.Backpack:GetChildren()) do
                    if tool:IsA("Tool") then
                        pcall(function()
                            local clonedTool = tool:Clone()
                            clonedTool.Parent = backpack
                            totalStolen = totalStolen + 1
                            print("‡∏Ç‡πÇ‡∏°‡∏¢:", tool.Name, "‡∏à‡∏≤‡∏Å", otherPlayer.Name, "(‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤)")
                        end)
                        
                        -- Try direct move if clone failed
                        if tool.Parent then
                            pcall(function()
                                tool.Parent = backpack
                                totalStolen = totalStolen + 1
                                print("‡∏¢‡πâ‡∏≤‡∏¢:", tool.Name, "‡∏à‡∏≤‡∏Å", otherPlayer.Name, "(‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤)")
                            end)
                        end
                        
                        task.wait(0.01) -- Small delay to prevent lag
                    end
                end
            end
            
            -- Steal from Hand
            if otherPlayer.Character then
                for _, tool in ipairs(otherPlayer.Character:GetChildren()) do
                    if tool:IsA("Tool") then
                        pcall(function()
                            local clonedTool = tool:Clone()
                            clonedTool.Parent = backpack
                            totalStolen = totalStolen + 1
                            print("‡∏Ç‡πÇ‡∏°‡∏¢:", tool.Name, "‡∏à‡∏≤‡∏Å", otherPlayer.Name, "(‡∏°‡∏∑‡∏≠)")
                        end)
                        
                        -- Try direct move if clone failed
                        if tool.Parent then
                            pcall(function()
                                tool.Parent = backpack
                                totalStolen = totalStolen + 1
                                print("‡∏¢‡πâ‡∏≤‡∏¢:", tool.Name, "‡∏à‡∏≤‡∏Å", otherPlayer.Name, "(‡∏°‡∏∑‡∏≠)")
                            end)
                        end
                        
                        task.wait(0.01) -- Small delay to prevent lag
                    end
                end
            end
        end
    end
    
    feedback.Text = ("‡∏Ç‡πÇ‡∏°‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå! ‡πÑ‡∏î‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î %d ‡∏ä‡∏¥‡πâ‡∏ô"):format(totalStolen)
    statusLabel.Text = ("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏Ç‡πÇ‡∏°‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à %d ‡∏ä‡∏¥‡πâ‡∏ô"):format(totalStolen)
    statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    print("‡∏Å‡∏≤‡∏£‡∏Ç‡πÇ‡∏°‡∏¢‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:", totalStolen)
    
    -- Auto equip last stolen item to make it visible
    if totalStolen > 0 then
        pcall(function()
            for _, tool in ipairs(backpack:GetChildren()) do
                if tool:IsA("Tool") and humanoid then
                    humanoid:EquipTool(tool)
                    print("‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡πÑ‡∏≠‡πÄ‡∏ó‡∏°:", tool.Name)
                    break
                end
            end
        end)
        
        -- Refresh list after stealing
        task.wait(1)
        scanAllItems()
    end
end

-- Connect events with animations
scanBtn.MouseButton1Click:Connect(function()
    -- Button animation effect
    local pressedTween = TweenService:Create(scanBtn, 
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {Size = UDim2.new(1, -35, 0, 35)}
    )
    local releaseTween = TweenService:Create(scanBtn, 
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {Size = UDim2.new(1, -30, 0, 40)}
    )
    
    pressedTween:Play()
    pressedTween.Completed:Connect(function()
        releaseTween:Play()
    end)
    
    scanAllItems()
end)

stealBtn.MouseButton1Click:Connect(function()
    -- Button animation effect
    local pressedTween = TweenService:Create(stealBtn, 
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {BackgroundColor3 = Color3.fromRGB(200, 30, 80)}
    )
    local releaseTween = TweenService:Create(stealBtn, 
        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {BackgroundColor3 = Color3.fromRGB(255, 50, 100)}
    )
    
    pressedTween:Play()
    pressedTween.Completed:Connect(function()
        releaseTween:Play()
    end)
    
    stealItem()
end)

stealAllBtn.MouseButton1Click:Connect(function()
    -- Button animation effect
    local pressedTween = TweenService:Create(stealAllBtn, 
        TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {BackgroundColor3 = Color3.fromRGB(100, 30, 200)}
    )
    local releaseTween = TweenService:Create(stealAllBtn, 
        TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut),
        {BackgroundColor3 = Color3.fromRGB(150, 50, 255)}
    )
    
    pressedTween:Play()
    pressedTween.Completed:Connect(function()
        releaseTween:Play()
    end)
    
    stealAllItems()
end)

-- Auto Steal Toggle
autoStealBtn.MouseButton1Click:Connect(function()
    autoStealEnabled = not autoStealEnabled
    
    if autoStealEnabled then
        autoStealBtn.Text = "‚ö° ‡∏Ç‡πÇ‡∏°‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡πÄ‡∏õ‡∏¥‡∏î)"
        autoStealBtn.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
        statusLabel.Text = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏Ç‡πÇ‡∏°‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏õ‡∏¥‡∏î"
        statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    else
        autoStealBtn.Text = "‚ö° ‡∏Ç‡πÇ‡∏°‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡∏õ‡∏¥‡∏î)"
        autoStealBtn.BackgroundColor3 = Color3.fromRGB(255, 150, 0)
        statusLabel.Text = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏Ç‡πÇ‡∏°‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏õ‡∏¥‡∏î"
        statusLabel.TextColor3 = Color3.fromRGB(255, 255, 100)
    end
    
    print("Auto Steal:", autoStealEnabled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î")
end)

-- Search when typing in search box
searchBox.Changed:Connect(function(property)
    if property == "Text" then
        scanAllItems() -- Always scan all items, filtered by search term
    end
end)

-- Auto-search when Enter is pressed
searchBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        scanAllItems()
    end
end)

-- Update character references manually (hotkey)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.R then
        -- Update all references when pressing R
        char = player.Character
        if char then
            humanoid = char:FindFirstChild("Humanoid")
            backpack = player:WaitForChild("Backpack")
            feedback.Text = "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÅ‡∏•‡πâ‡∏ß! (‡∏Å‡∏î R ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä)"
            statusLabel.Text = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"
            statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
            print("‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå")
            
            -- Auto refresh items list
            scanAllItems()
        else
            feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£!"
            statusLabel.Text = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£"
            statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        end
    end
end)

-- Auto update and auto steal system
spawn(function()
    while screenGui.Parent do
        task.wait(3) -- Check every 3 seconds
        
        -- Auto refresh items list
        if mainFrame.Visible then
            scanAllItems()
        end
        
        -- Auto steal if enabled
        if autoStealEnabled and #allItems > 0 then
            for _, itemData in ipairs(allItems) do
                if itemData.tool and itemData.tool.Parent then
                    pcall(function()
                        local clonedTool = itemData.tool:Clone()
                        clonedTool.Parent = backpack
                        print("Auto stole:", itemData.tool.Name, "from", itemData.player.Name)
                        
                        -- Equip the item
                        if humanoid then
                            humanoid:EquipTool(clonedTool)
                        end
                    end)
                    
                    task.wait(0.1) -- Small delay between auto steals
                end
            end
            
            statusLabel.Text = "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏Ç‡πÇ‡∏°‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
            statusLabel.TextColor3 = Color3.fromRGB(255, 255, 100)
        end
    end
end)

print("‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏° Universal ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!")
print("‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
print("=== ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà ===")
print("1. ‡∏Ñ‡∏•‡∏¥‡∏Å '‡πÅ‡∏™‡∏Å‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏∏‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
print("2. ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
print("3. ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏•‡∏¥‡∏Å '‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å'")
print("4. ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å '‡∏Ç‡πÇ‡∏°‡∏¢‡∏ó‡∏∏‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡πÇ‡∏°‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
print("5. ‡πÄ‡∏õ‡∏¥‡∏î '‡∏Ç‡πÇ‡∏°‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥")
print("6. ‡∏Å‡∏î R ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡∏°")
print("=== ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÉ‡∏´‡∏°‡πà ===")
print("‚úÖ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏á‡∏ß‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á - ‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
print("‚úÖ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏Ñ‡∏ô - ‡πÄ‡∏´‡πá‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß")
print("‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡πÇ‡∏°‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ - ‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è")
print("‚úÖ UI ‡∏ó‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏¢ ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Ñ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°")

-- Auto scan items when GUI opens
task.wait(1)
if mainFrame.Visible then
    scanAllItems()
end
