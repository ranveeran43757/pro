-- LocalScript in StarterPlayer -> StarterPlayerScripts
-- Universal Item Stealer - Steal items from other players

print("Universal Item Stealer ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...")

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local backpack = player:WaitForChild("Backpack")

-- Wait for character properly
local function waitForCharacter()
    local char = player.Character or player.CharacterAdded:Wait()
    local humanoid = char:WaitForChild("Humanoid")
    return char, humanoid
end

local char, humanoid = waitForCharacter()

-- Update character when respawned
player.CharacterAdded:Connect(function(newChar)
    char = newChar
    humanoid = newChar:WaitForChild("Humanoid")
    backpack = player:WaitForChild("Backpack")
    print("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£:", player.Name)
end)

print("‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô:", player.Name)
print("‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")

-- Data variables
local selectedPlayer = nil
local selectedTool = nil
local nearbyPlayers = {}

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UniversalItemStealer"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = playerGui

-- Toggle Button (Always visible) - Mobile friendly
local toggleBtn = Instance.new("TextButton")
toggleBtn.Name = "ToggleButton"
toggleBtn.Size = UDim2.new(0, 70, 0, 70)
toggleBtn.Position = UDim2.new(0, 15, 0, 100)
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleBtn.BackgroundTransparency = 0.2
toggleBtn.BorderSizePixel = 0
toggleBtn.Text = "üî•"
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.TextSize = 30
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.Active = true
toggleBtn.ZIndex = 10
toggleBtn.Parent = screenGui

-- Toggle button styling
local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0, 35)
toggleCorner.Parent = toggleBtn

local toggleStroke = Instance.new("UIStroke")
toggleStroke.Color = Color3.fromRGB(255, 100, 50)
toggleStroke.Thickness = 3
toggleStroke.Transparency = 0.3
toggleStroke.Parent = toggleBtn

-- Glow effect for toggle button
local toggleGradient = Instance.new("UIGradient")
toggleGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 50, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 30, 30))
}
toggleGradient.Rotation = 45
toggleGradient.Parent = toggleBtn

-- Main Frame (Initially hidden) - Mobile optimized
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0.9, 0, 0.85, 0)
mainFrame.Position = UDim2.new(0.05, 0, 0.075, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BackgroundTransparency = 0.1
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Visible = false
mainFrame.ZIndex = 1
mainFrame.Parent = screenGui

-- Modern corner and styling
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 20)
corner.Parent = mainFrame

-- Modern stroke
local stroke = Instance.new("UIStroke")
stroke.Color = Color3.fromRGB(255, 100, 50)
stroke.Thickness = 2
stroke.Transparency = 0.5
stroke.Parent = mainFrame

-- Modern gradient
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 30)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 25))
}
gradient.Rotation = 135
gradient.Transparency = NumberSequence.new{
    NumberSequenceKeypoint.new(0, 0.1),
    NumberSequenceKeypoint.new(0.5, 0.2),
    NumberSequenceKeypoint.new(1, 0.1)
}
gradient.Parent = mainFrame

-- Enable Mobile-friendly Dragging
local dragging = false
local dragStart, startPos

local function updateInput(input)
    if dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or
       input.UserInputType == Enum.UserInputType.Touch then
        updateInput(input)
    end
end)

-- Title Bar - Mobile optimized
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 60)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
titleBar.BackgroundTransparency = 0.05
titleBar.BorderSizePixel = 0
titleBar.ZIndex = 2
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 20)
titleCorner.Parent = titleBar

local titleGradient = Instance.new("UIGradient")
titleGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 100, 50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 50, 30))
}
titleGradient.Rotation = 90
titleGradient.Parent = titleBar

-- Title Text - Mobile friendly size
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -120, 1, 0)
title.Position = UDim2.new(0, 15, 0, 0)
title.BackgroundTransparency = 1
title.Text = "üî• ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏° üî•"
title.TextColor3 = Color3.new(1, 1, 1)
title.TextSize = 18
title.Font = Enum.Font.GothamBold
title.TextXAlignment = Enum.TextXAlignment.Left
title.ZIndex = 3
title.Parent = titleBar

-- Close Button - Mobile friendly
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 50, 0, 50)
closeBtn.Position = UDim2.new(1, -55, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
closeBtn.Text = "‚úï"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.TextSize = 20
closeBtn.Font = Enum.Font.GothamBold
closeBtn.BorderSizePixel = 0
closeBtn.ZIndex = 3
closeBtn.Parent = titleBar

local closeBtnCorner = Instance.new("UICorner")
closeBtnCorner.CornerRadius = UDim.new(0, 25)
closeBtnCorner.Parent = closeBtn

-- Content Frame for scrolling
local contentFrame = Instance.new("ScrollingFrame")
contentFrame.Size = UDim2.new(1, 0, 1, -70)
contentFrame.Position = UDim2.new(0, 0, 0, 70)
contentFrame.BackgroundTransparency = 1
contentFrame.BorderSizePixel = 0
contentFrame.ScrollBarThickness = 8
contentFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 100, 50)
contentFrame.CanvasSize = UDim2.new(0, 0, 0, 1200)
contentFrame.ZIndex = 2
contentFrame.Parent = mainFrame

-- Toggle functionality with better mobile support
local isUIVisible = false

local function toggleUI()
    isUIVisible = not isUIVisible
    
    if isUIVisible then
        mainFrame.Visible = true
        mainFrame.Size = UDim2.new(0, 50, 0, 50)
        mainFrame.BackgroundTransparency = 1
        
        -- Smooth open animation
        local tween = TweenService:Create(
            mainFrame,
            TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
            {
                Size = UDim2.new(0.9, 0, 0.85, 0),
                BackgroundTransparency = 0.1
            }
        )
        tween:Play()
        
        -- Change toggle button
        toggleBtn.Text = "‚ùå"
        toggleBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    else
        -- Smooth close animation
        local tween = TweenService:Create(
            mainFrame,
            TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In),
            {
                Size = UDim2.new(0, 50, 0, 50),
                BackgroundTransparency = 1
            }
        )
        tween:Play()
        
        tween.Completed:Connect(function()
            mainFrame.Visible = false
        end)
        
        -- Change toggle button
        toggleBtn.Text = "üî•"
        toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    end
end

-- Connect toggle events
toggleBtn.MouseButton1Click:Connect(toggleUI)
closeBtn.MouseButton1Click:Connect(toggleUI)

-- Mobile touch support
toggleBtn.TouchTap:Connect(toggleUI)
closeBtn.TouchTap:Connect(toggleUI)

-- Scan Range Section
local rangeLabel = Instance.new("TextLabel")
rangeLabel.Size = UDim2.new(1, -20, 0, 40)
rangeLabel.Position = UDim2.new(0, 10, 0, 10)
rangeLabel.BackgroundTransparency = 1
rangeLabel.Text = "üéØ ‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡πÅ‡∏Å‡∏ô: 50 ‡∏´‡∏ô‡πà‡∏ß‡∏¢"
rangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeLabel.TextSize = 16
rangeLabel.Font = Enum.Font.GothamSemibold
rangeLabel.TextXAlignment = Enum.TextXAlignment.Left
rangeLabel.ZIndex = 3
rangeLabel.Parent = contentFrame

local rangeSlider = Instance.new("TextBox")
rangeSlider.Size = UDim2.new(1, -20, 0, 45)
rangeSlider.Position = UDim2.new(0, 10, 0, 55)
rangeSlider.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
rangeSlider.BackgroundTransparency = 0.2
rangeSlider.BorderSizePixel = 0
rangeSlider.PlaceholderText = "‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡πÅ‡∏Å‡∏ô (10-200)"
rangeSlider.Text = "50"
rangeSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
rangeSlider.TextSize = 16
rangeSlider.Font = Enum.Font.Gotham
rangeSlider.ZIndex = 3
rangeSlider.Parent = contentFrame

local rangeCorner = Instance.new("UICorner")
rangeCorner.CornerRadius = UDim.new(0, 10)
rangeCorner.Parent = rangeSlider

local rangeStroke = Instance.new("UIStroke")
rangeStroke.Color = Color3.fromRGB(255, 100, 50)
rangeStroke.Thickness = 1
rangeStroke.Transparency = 0.5
rangeStroke.Parent = rangeSlider

-- Search Section
local searchLabel = Instance.new("TextLabel")
searchLabel.Size = UDim2.new(1, -20, 0, 40)
searchLabel.Position = UDim2.new(0, 10, 0, 110)
searchLabel.BackgroundTransparency = 1
searchLabel.Text = "üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏≠‡πÄ‡∏ó‡∏°:"
searchLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
searchLabel.TextSize = 16
searchLabel.Font = Enum.Font.GothamSemibold
searchLabel.TextXAlignment = Enum.TextXAlignment.Left
searchLabel.ZIndex = 3
searchLabel.Parent = contentFrame

local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1, -20, 0, 45)
searchBox.Position = UDim2.new(0, 10, 0, 155)
searchBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
searchBox.BackgroundTransparency = 0.2
searchBox.BorderSizePixel = 0
searchBox.PlaceholderText = "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..."
searchBox.Text = ""
searchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
searchBox.TextSize = 16
searchBox.Font = Enum.Font.Gotham
searchBox.ZIndex = 3
searchBox.Parent = contentFrame

local searchCorner = Instance.new("UICorner")
searchCorner.CornerRadius = UDim.new(0, 10)
searchCorner.Parent = searchBox

local searchStroke = Instance.new("UIStroke")
searchStroke.Color = Color3.fromRGB(255, 100, 50)
searchStroke.Thickness = 1
searchStroke.Transparency = 0.5
searchStroke.Parent = searchBox

-- Scan Button
local scanBtn = Instance.new("TextButton")
scanBtn.Size = UDim2.new(1, -20, 0, 50)
scanBtn.Position = UDim2.new(0, 10, 0, 210)
scanBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 100)
scanBtn.BackgroundTransparency = 0.2
scanBtn.Text = "üåê ‡∏™‡πÅ‡∏Å‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"
scanBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
scanBtn.TextSize = 18
scanBtn.Font = Enum.Font.GothamBold
scanBtn.BorderSizePixel = 0
scanBtn.ZIndex = 3
scanBtn.Parent = contentFrame

local scanCorner = Instance.new("UICorner")
scanCorner.CornerRadius = UDim.new(0, 12)
scanCorner.Parent = scanBtn

-- Players List Frame
local playersFrame = Instance.new("ScrollingFrame")
playersFrame.Size = UDim2.new(1, -20, 0, 150)
playersFrame.Position = UDim2.new(0, 10, 0, 270)
playersFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
playersFrame.BackgroundTransparency = 0.3
playersFrame.BorderSizePixel = 0
playersFrame.ScrollBarThickness = 6
playersFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 100, 50)
playersFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
playersFrame.ZIndex = 3
playersFrame.Parent = contentFrame

local playersCorner = Instance.new("UICorner")
playersCorner.CornerRadius = UDim.new(0, 10)
playersCorner.Parent = playersFrame

local playersLayout = Instance.new("UIListLayout")
playersLayout.Parent = playersFrame
playersLayout.SortOrder = Enum.SortOrder.LayoutOrder
playersLayout.Padding = UDim.new(0, 5)

-- Items List Frame
local itemsFrame = Instance.new("ScrollingFrame")
itemsFrame.Size = UDim2.new(1, -20, 0, 150)
itemsFrame.Position = UDim2.new(0, 10, 0, 430)
itemsFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
itemsFrame.BackgroundTransparency = 0.3
itemsFrame.BorderSizePixel = 0
itemsFrame.ScrollBarThickness = 6
itemsFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 100, 50)
itemsFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
itemsFrame.ZIndex = 3
itemsFrame.Parent = contentFrame

local itemsCorner = Instance.new("UICorner")
itemsCorner.CornerRadius = UDim.new(0, 10)
itemsCorner.Parent = itemsFrame

local itemsLayout = Instance.new("UIListLayout")
itemsLayout.Parent = itemsFrame
itemsLayout.SortOrder = Enum.SortOrder.LayoutOrder
itemsLayout.Padding = UDim.new(0, 5)

-- Action Buttons
local stealBtn = Instance.new("TextButton")
stealBtn.Size = UDim2.new(1, -20, 0, 55)
stealBtn.Position = UDim2.new(0, 10, 0, 590)
stealBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 50)
stealBtn.BackgroundTransparency = 0.2
stealBtn.Text = "üí∞ ‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°"
stealBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
stealBtn.TextSize = 18
stealBtn.Font = Enum.Font.GothamBold
stealBtn.BorderSizePixel = 0
stealBtn.ZIndex = 3
stealBtn.Parent = contentFrame

local stealBtnCorner = Instance.new("UICorner")
stealBtnCorner.CornerRadius = UDim.new(0, 12)
stealBtnCorner.Parent = stealBtn

local stealAllSelectedBtn = Instance.new("TextButton")
stealAllSelectedBtn.Size = UDim2.new(1, -20, 0, 55)
stealAllSelectedBtn.Position = UDim2.new(0, 10, 0, 655)
stealAllSelectedBtn.BackgroundColor3 = Color3.fromRGB(255, 150, 50)
stealAllSelectedBtn.BackgroundTransparency = 0.2
stealAllSelectedBtn.Text = "üéØ ‡∏Ç‡πÇ‡∏°‡∏¢‡∏ó‡∏∏‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"
stealAllSelectedBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
stealAllSelectedBtn.TextSize = 16
stealAllSelectedBtn.Font = Enum.Font.GothamBold
stealAllSelectedBtn.BorderSizePixel = 0
stealAllSelectedBtn.ZIndex = 3
stealAllSelectedBtn.Parent = contentFrame

local stealAllSelectedBtnCorner = Instance.new("UICorner")
stealAllSelectedBtnCorner.CornerRadius = UDim.new(0, 12)
stealAllSelectedBtnCorner.Parent = stealAllSelectedBtn

local stealAllBtn = Instance.new("TextButton")
stealAllBtn.Size = UDim2.new(1, -20, 0, 55)
stealAllBtn.Position = UDim2.new(0, 10, 0, 720)
stealAllBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 200)
stealAllBtn.BackgroundTransparency = 0.2
stealAllBtn.Text = "üíÄ ‡∏Ç‡πÇ‡∏°‡∏¢‡∏ó‡∏∏‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô"
stealAllBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
stealAllBtn.TextSize = 18
stealAllBtn.Font = Enum.Font.GothamBold
stealAllBtn.BorderSizePixel = 0
stealAllBtn.ZIndex = 3
stealAllBtn.Parent = contentFrame

local stealAllBtnCorner = Instance.new("UICorner")
stealAllBtnCorner.CornerRadius = UDim.new(0, 12)
stealAllBtnCorner.Parent = stealAllBtn

-- Feedback Label
local feedback = Instance.new("TextLabel")
feedback.Size = UDim2.new(1, -20, 0, 60)
feedback.Position = UDim2.new(0, 10, 0, 785)
feedback.BackgroundTransparency = 1
feedback.Text = "‡∏Å‡∏î‡∏™‡πÅ‡∏Å‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á"
feedback.TextColor3 = Color3.fromRGB(255, 220, 100)
feedback.TextSize = 16
feedback.Font = Enum.Font.GothamSemibold
feedback.TextWrapped = true
feedback.ZIndex = 3
feedback.Parent = contentFrame

print("‡∏™‡∏£‡πâ‡∏≤‡∏á UI ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")

-- Distance calculation function
local function getDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

-- Scan nearby players function
local function scanNearbyPlayers()
    print("Scanning for players...")
    
    -- Update character reference
    char = player.Character
    
    -- Clear old list
    for _, child in ipairs(playersFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    for _, child in ipairs(itemsFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    nearbyPlayers = {}
    local scanRange = tonumber(rangeSlider.Text) or 50
    scanRange = math.clamp(scanRange, 10, 200)
    rangeLabel.Text = "üéØ ‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡πÅ‡∏Å‡∏ô: " .. scanRange .. " ‡∏´‡∏ô‡πà‡∏ß‡∏¢"
    
    if not char or not char:FindFirstChild("HumanoidRootPart") then
        feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
        return
    end
    
    local myPos = char.HumanoidRootPart.Position
    
    -- Find nearby players
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local otherChar = otherPlayer.Character
            local otherRoot = otherChar:FindFirstChild("HumanoidRootPart")
            
            if otherRoot then
                local distance = getDistance(myPos, otherRoot.Position)
                
                if distance <= scanRange then
                    table.insert(nearbyPlayers, {
                        player = otherPlayer,
                        distance = distance,
                        character = otherChar
                    })
                end
            end
        end
    end
    
    print("Found nearby players:", #nearbyPlayers, "players")
    
    if #nearbyPlayers == 0 then
        feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞ " .. scanRange .. " ‡∏´‡∏ô‡πà‡∏ß‡∏¢"
        return
    end
    
    -- Sort by distance
    table.sort(nearbyPlayers, function(a, b) return a.distance < b.distance end)
    
    -- Create buttons for each player
    for i, playerData in ipairs(nearbyPlayers) do
        local btn = Instance.new("TextButton")
        btn.Parent = playersFrame
        btn.LayoutOrder = i
        btn.Size = UDim2.new(1, -10, 0, 35)
        btn.Position = UDim2.new(0, 5, 0, 0)
        btn.Text = playerData.player.Name .. " (" .. math.floor(playerData.distance) .. "m)"
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.TextSize = 16
        btn.Font = Enum.Font.GothamSemibold
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        btn.BorderSizePixel = 0
        
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 4)
        btnCorner.Parent = btn
        
        btn.MouseButton1Click:Connect(function()
            selectedPlayer = playerData
            print("Selected player:", playerData.player.Name)
            
            -- Reset all button colors
            for _, c in ipairs(playersFrame:GetChildren()) do
                if c:IsA("TextButton") then 
                    c.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
                end
            end
            
            -- Change selected button color
            btn.BackgroundColor3 = Color3.fromRGB(70, 130, 200)
            
            -- Show items of selected player
            showPlayerItems(playerData)
        end)
    end
    
    -- Update Canvas Size
    playersFrame.CanvasSize = UDim2.new(0, 0, 0, playersLayout.AbsoluteContentSize.Y + 10)
    feedback.Text = "‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: " .. #nearbyPlayers .. " ‡∏Ñ‡∏ô"
end

-- Show player items function
local function showPlayerItems(playerData)
    print("Viewing items of:", playerData.player.Name)
    
    -- Update character reference to get latest data
    if playerData.player == player then
        playerData.character = player.Character
    end
    
    -- Clear old item list
    for _, child in ipairs(itemsFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    local items = {}
    local searchTerm = searchBox.Text:lower()
    
    -- Find items from Backpack
    if playerData.player.Backpack then
        for _, tool in ipairs(playerData.player.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                local toolName = tool.Name:lower()
                if searchTerm == "" or toolName:find(searchTerm) then
                    table.insert(items, {tool = tool, location = "Backpack"})
                end
            end
        end
    end
    
    -- Find items being held - Update character reference
    local currentChar = playerData.player.Character
    if currentChar then
        for _, tool in ipairs(currentChar:GetChildren()) do
            if tool:IsA("Tool") then
                local toolName = tool.Name:lower()
                if searchTerm == "" or toolName:find(searchTerm) then
                    table.insert(items, {tool = tool, location = "Hand"})
                end
            end
        end
    end
    
    print("Found items of", playerData.player.Name .. ":", #items, "items")
    
    if #items == 0 then
        if searchTerm ~= "" then
            feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö '" .. searchBox.Text .. "' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö " .. playerData.player.Name
        else
            feedback.Text = playerData.player.Name .. " ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°"
        end
        return
    end
    
    -- Create buttons for each item
    for i, itemData in ipairs(items) do
        local btn = Instance.new("TextButton")
        btn.Parent = itemsFrame
        btn.LayoutOrder = i
        btn.Size = UDim2.new(1, -10, 0, 35)
        btn.Position = UDim2.new(0, 5, 0, 0)
        btn.Text = itemData.tool.Name .. " (" .. itemData.location .. ")"
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.TextSize = 16
        btn.Font = Enum.Font.GothamSemibold
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        btn.BorderSizePixel = 0
        
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 4)
        btnCorner.Parent = btn
        
        btn.MouseButton1Click:Connect(function()
            selectedTool = itemData
            print("Selected item:", itemData.tool.Name)
            
            -- Reset all button colors
            for _, c in ipairs(itemsFrame:GetChildren()) do
                if c:IsA("TextButton") then 
                    c.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
                end
            end
            
            -- Change selected button color
            btn.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
            feedback.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß: " .. itemData.tool.Name .. " ‡∏à‡∏≤‡∏Å " .. playerData.player.Name
        end)
    end
    
    -- Update Canvas Size
    itemsFrame.CanvasSize = UDim2.new(0, 0, 0, itemsLayout.AbsoluteContentSize.Y + 10)
    feedback.Text = playerData.player.Name .. " ‡∏°‡∏µ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°: " .. #items .. " ‡∏ä‡∏¥‡πâ‡∏ô"
end

-- Search for specific item across all players
local function searchForItem()
    local searchTerm = searchBox.Text:lower()
    if searchTerm == "" then
        feedback.Text = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"
        return
    end
    
    print("Searching for item:", searchBox.Text)
    
    -- Clear old lists
    for _, child in ipairs(playersFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    for _, child in ipairs(itemsFrame:GetChildren()) do
        if child:IsA("TextButton") then 
            child:Destroy() 
        end
    end
    
    local foundItems = {}
    local scanRange = tonumber(rangeSlider.Text) or 50
    scanRange = math.clamp(scanRange, 10, 200)
    
    -- Update character reference
    char = player.Character
    
    if not char or not char:FindFirstChild("HumanoidRootPart") then
        feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
        return
    end
    
    local myPos = char.HumanoidRootPart.Position
    
    -- Search through all players
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer.Character then
            local otherChar = otherPlayer.Character
            local otherRoot = otherChar:FindFirstChild("HumanoidRootPart")
            local distance = otherRoot and getDistance(myPos, otherRoot.Position) or math.huge
            
            -- Search in Backpack
            if otherPlayer.Backpack then
                for _, tool in ipairs(otherPlayer.Backpack:GetChildren()) do
                    if tool:IsA("Tool") then
                        local toolName = tool.Name:lower()
                        if toolName:find(searchTerm) then
                            table.insert(foundItems, {
                                tool = tool,
                                player = otherPlayer,
                                location = "Backpack",
                                distance = distance,
                                character = otherChar
                            })
                        end
                    end
                end
            end
            
            -- Search in Hand
            for _, tool in ipairs(otherChar:GetChildren()) do
                if tool:IsA("Tool") then
                    local toolName = tool.Name:lower()
                    if toolName:find(searchTerm) then
                        table.insert(foundItems, {
                            tool = tool,
                            player = otherPlayer,
                            location = "Hand",
                            distance = distance,
                            character = otherChar
                        })
                    end
                end
            end
        end
    end
    
    print("Found", #foundItems, "items matching:", searchBox.Text)
    
    if #foundItems == 0 then
        feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö '" .. searchBox.Text .. "'"
        return
    end
    
    -- Sort by distance
    table.sort(foundItems, function(a, b) return a.distance < b.distance end)
    
    -- Create buttons for found items
    for i, itemData in ipairs(foundItems) do
        local btn = Instance.new("TextButton")
        btn.Parent = itemsFrame
        btn.LayoutOrder = i
        btn.Size = UDim2.new(1, -10, 0, 35)
        btn.Position = UDim2.new(0, 5, 0, 0)
        
        local distanceText = itemData.distance < math.huge and (" [" .. math.floor(itemData.distance) .. "m]") or " [Far]"
        btn.Text = itemData.tool.Name .. " (" .. itemData.location .. ") - " .. itemData.player.Name .. distanceText
        btn.TextColor3 = Color3.new(1, 1, 1)
        btn.TextSize = 16
        btn.Font = Enum.Font.GothamSemibold
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        btn.BorderSizePixel = 0
        
        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 4)
        btnCorner.Parent = btn
        
        btn.MouseButton1Click:Connect(function()
            selectedTool = itemData
            selectedPlayer = {
                player = itemData.player,
                distance = itemData.distance,
                character = itemData.character
            }
            print("Selected item:", itemData.tool.Name, "from", itemData.player.Name)
            
            -- Reset all button colors
            for _, c in ipairs(itemsFrame:GetChildren()) do
                if c:IsA("TextButton") then 
                    c.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
                end
            end
            
            -- Change selected button color
            btn.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
            feedback.Text = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß: " .. itemData.tool.Name .. " ‡∏à‡∏≤‡∏Å " .. itemData.player.Name
        end)
    end
    
    -- Update Canvas Size
    itemsFrame.CanvasSize = UDim2.new(0, 0, 0, itemsLayout.AbsoluteContentSize.Y + 10)
    feedback.Text = "‡∏û‡∏ö " .. #foundItems .. " ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö '" .. searchBox.Text .. "'"
end

-- Steal item function
local function stealItem()
    print("Starting theft...")
    
    if not selectedPlayer then
        feedback.Text = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡πà‡∏≠‡∏ô"
        return
    end
    
    if not selectedTool then
        feedback.Text = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏Å‡πà‡∏≠‡∏ô"
        return
    end
    
    local targetTool = selectedTool.tool
    
    if not targetTool or not targetTool.Parent then
        feedback.Text = "‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏´‡∏≤‡∏¢"
        return
    end
    
    print("Stealing:", targetTool.Name, "from", selectedPlayer.player.Name)
    
    -- Try stealing with different methods
    local success = false
    
    -- Method 1: Clone and move
    pcall(function()
        local clonedTool = targetTool:Clone()
        clonedTool.Parent = backpack
        success = true
        print("Successful theft using Clone method")
    end)
    
    -- Method 2: Direct parent change
    if not success then
        pcall(function()
            targetTool.Parent = backpack
            success = true
            print("Successful theft using Parent Change method")
        end)
    end
    
    -- Method 3: Use FireServer (for games with RemoteEvent)
    if not success then
        pcall(function()
            for _, obj in ipairs(game:GetDescendants()) do
                if obj:IsA("RemoteEvent") and obj.Name:lower():find("tool") or obj.Name:lower():find("item") then
                    obj:FireServer("give", targetTool.Name, player)
                    success = true
                    print("Request sent via RemoteEvent:", obj.Name)
                    break
                end
            end
        end)
    end
    
    if success then
        feedback.Text = ("‡∏Ç‡πÇ‡∏°‡∏¢ \"%s\" ‡∏à‡∏≤‡∏Å %s ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"):format(targetTool.Name, selectedPlayer.player.Name)
        
        -- Force equip the stolen item to make it visible
        pcall(function()
            if humanoid and targetTool.Parent == backpack then
                humanoid:EquipTool(targetTool)
                print("Equipped stolen item:", targetTool.Name)
            end
        end)
        
        -- Auto update list
        task.wait(0.5)
        if selectedPlayer then
            showPlayerItems(selectedPlayer)
        end
    else
        feedback.Text = "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏î‡πâ - ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô"
    end
end

-- Steal all items from selected player function
local function stealAllFromSelectedPlayer()
    if not selectedPlayer then
        feedback.Text = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡πà‡∏≠‡∏ô"
        return
    end
    
    print("Starting theft from selected player:", selectedPlayer.player.Name)
    feedback.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡πÇ‡∏°‡∏¢‡∏ó‡∏∏‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å " .. selectedPlayer.player.Name .. "..."
    
    local totalStolen = 0
    local targetPlayer = selectedPlayer.player
    
    -- Update character reference
    selectedPlayer.character = targetPlayer.Character
    
    -- Steal from Backpack
    if targetPlayer.Backpack then
        for _, tool in ipairs(targetPlayer.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                pcall(function()
                    local clonedTool = tool:Clone()
                    clonedTool.Parent = backpack
                    totalStolen = totalStolen + 1
                    print("Stole:", tool.Name, "from", targetPlayer.Name, "(Backpack)")
                end)
                
                -- Try direct move if clone failed
                if tool.Parent then
                    pcall(function()
                        tool.Parent = backpack
                        totalStolen = totalStolen + 1
                        print("Moved:", tool.Name, "from", targetPlayer.Name, "(Backpack)")
                    end)
                end
                
                task.wait(0.01) -- Small delay to prevent lag
            end
        end
    end
    
    -- Steal from Hand
    if selectedPlayer.character then
        for _, tool in ipairs(selectedPlayer.character:GetChildren()) do
            if tool:IsA("Tool") then
                pcall(function()
                    local clonedTool = tool:Clone()
                    clonedTool.Parent = backpack
                    totalStolen = totalStolen + 1
                    print("Stole:", tool.Name, "from", targetPlayer.Name, "(Hand)")
                end)
                
                -- Try direct move if clone failed
                if tool.Parent then
                    pcall(function()
                        tool.Parent = backpack
                        totalStolen = totalStolen + 1
                        print("Moved:", tool.Name, "from", targetPlayer.Name, "(Hand)")
                    end)
                end
                
                task.wait(0.01) -- Small delay to prevent lag
            end
        end
    end
    
    feedback.Text = ("‡∏Ç‡πÇ‡∏°‡∏¢ %d ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å %s ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"):format(totalStolen, targetPlayer.Name)
    print("Theft from", targetPlayer.Name, "finished! Total items stolen:", totalStolen)
    
    -- Auto equip last stolen item to make it visible
    if totalStolen > 0 then
        pcall(function()
            for _, tool in ipairs(backpack:GetChildren()) do
                if tool:IsA("Tool") and humanoid then
                    humanoid:EquipTool(tool)
                    print("Equipped item:", tool.Name)
                    break
                end
            end
        end)
    end
    
    -- Auto update list
    task.wait(0.5)
    showPlayerItems(selectedPlayer)
end

-- Steal all items from everyone function
local function stealAllItems()
    print("Starting mass theft...")
    feedback.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡πÇ‡∏°‡∏¢‡∏ó‡∏∏‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô..."
    
    local totalStolen = 0
    local scanRange = tonumber(rangeSlider.Text) or 50
    scanRange = math.clamp(scanRange, 10, 200)
    
    -- Update character reference
    char = player.Character
    
    if not char or not char:FindFirstChild("HumanoidRootPart") then
        feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
        return
    end
    
    local myPos = char.HumanoidRootPart.Position
    
    -- Go through all players
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player then
            local distance = math.huge
            
            -- Calculate distance if player has character
            if otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                distance = getDistance(myPos, otherPlayer.Character.HumanoidRootPart.Position)
            end
            
            -- Skip if too far (unless we want to steal from everyone regardless of distance)
            -- Comment out the next 3 lines if you want to steal from ALL players regardless of distance
            if distance > scanRange * 2 then -- Use 2x scan range for mass theft
                continue
            end
            
            -- Steal from Backpack
            if otherPlayer.Backpack then
                for _, tool in ipairs(otherPlayer.Backpack:GetChildren()) do
                    if tool:IsA("Tool") then
                        pcall(function()
                            local clonedTool = tool:Clone()
                            clonedTool.Parent = backpack
                            totalStolen = totalStolen + 1
                            print("Stole:", tool.Name, "from", otherPlayer.Name, "(Backpack)")
                        end)
                        
                        -- Try direct move if clone failed
                        if tool.Parent then
                            pcall(function()
                                tool.Parent = backpack
                                totalStolen = totalStolen + 1
                                print("Moved:", tool.Name, "from", otherPlayer.Name, "(Backpack)")
                            end)
                        end
                        
                        task.wait(0.01) -- Small delay to prevent lag
                    end
                end
            end
            
            -- Steal from Hand
            if otherPlayer.Character then
                for _, tool in ipairs(otherPlayer.Character:GetChildren()) do
                    if tool:IsA("Tool") then
                        pcall(function()
                            local clonedTool = tool:Clone()
                            clonedTool.Parent = backpack
                            totalStolen = totalStolen + 1
                            print("Stole:", tool.Name, "from", otherPlayer.Name, "(Hand)")
                        end)
                        
                        -- Try direct move if clone failed
                        if tool.Parent then
                            pcall(function()
                                tool.Parent = backpack
                                totalStolen = totalStolen + 1
                                print("Moved:", tool.Name, "from", otherPlayer.Name, "(Hand)")
                            end)
                        end
                        
                        task.wait(0.01) -- Small delay to prevent lag
                    end
                end
            end
        end
    end
    
    feedback.Text = ("‡∏Å‡∏≤‡∏£‡∏Ç‡πÇ‡∏°‡∏¢‡πÅ‡∏ö‡∏ö‡∏£‡∏ß‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏Ç‡πÇ‡∏°‡∏¢ %d ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏£‡∏ß‡∏°":format(totalStolen)
    print("Mass theft finished! Total items stolen:", totalStolen)
    
    -- Auto equip last stolen item to make it visible
    if totalStolen > 0 then
        pcall(function()
            for _, tool in ipairs(backpack:GetChildren()) do
                if tool:IsA("Tool") and humanoid then
                    humanoid:EquipTool(tool)
                    print("Equipped item:", tool.Name)
                    break
                end
            end
        end)
    end
end

-- Connect events
scanBtn.MouseButton1Click:Connect(function()
    -- Button effect
    scanBtn.BackgroundColor3 = Color3.fromRGB(50, 100, 150)
    task.wait(0.1)
    scanBtn.BackgroundColor3 = Color3.fromRGB(70, 130, 200)
    
    scanNearbyPlayers()
end)

stealBtn.MouseButton1Click:Connect(function()
    -- Button effect
    stealBtn.BackgroundColor3 = Color3.fromRGB(180, 40, 40)
    task.wait(0.1)
    stealBtn.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
    
    stealItem()
end)

stealAllSelectedBtn.MouseButton1Click:Connect(function()
    -- Button effect
    stealAllSelectedBtn.BackgroundColor3 = Color3.fromRGB(160, 90, 40)
    task.wait(0.1)
    stealAllSelectedBtn.BackgroundColor3 = Color3.fromRGB(200, 120, 60)
    
    stealAllFromSelectedPlayer()
end)

stealAllBtn.MouseButton1Click:Connect(function()
    -- Button effect
    stealAllBtn.BackgroundColor3 = Color3.fromRGB(100, 20, 100)
    task.wait(0.1)
    stealAllBtn.BackgroundColor3 = Color3.fromRGB(150, 30, 150)
    
    stealAllItems()
end)

-- Search when typing in search box
searchBox.Changed:Connect(function(property)
    if property == "Text" then
        if searchBox.Text ~= "" then
            searchForItem()
        else
            -- Clear search results when search box is empty
            for _, child in ipairs(itemsFrame:GetChildren()) do
                if child:IsA("TextButton") then 
                    child:Destroy() 
                end
            end
            itemsFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
            feedback.Text = "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏±‡πà‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô"
        end
    end
end)

-- Auto-search when Enter is pressed
searchBox.FocusLost:Connect(function(enterPressed)
    if enterPressed and searchBox.Text ~= "" then
        searchForItem()
    end
end)

-- Update character references manually (hotkey)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.R then
        -- Update all references when pressing R
        char = player.Character
        if char then
            humanoid = char:FindFirstChild("Humanoid")
            backpack = player:WaitForChild("Backpack")
            feedback.Text = "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÅ‡∏•‡πâ‡∏ß! (‡∏Å‡∏î R ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä)"
            print("Manual character update completed")
        else
            feedback.Text = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£!"
        end
    end
end)

-- Limit numbers in scan range box
rangeSlider.FocusLost:Connect(function()
    local num = tonumber(rangeSlider.Text)
    if not num or num < 10 then
        rangeSlider.Text = "10"
    elseif num > 200 then
        rangeSlider.Text = "200"
    else
        rangeSlider.Text = tostring(math.floor(num))
    end
    rangeLabel.Text = "üéØ ‡∏£‡∏∞‡∏¢‡∏∞‡∏™‡πÅ‡∏Å‡∏ô: " .. rangeSlider.Text .. " ‡∏´‡∏ô‡πà‡∏ß‡∏¢"
end)

-- Auto-open UI on first load
wait(1)
if not isUIVisible then
    toggleUI()
end

print("‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡πÇ‡∏°‡∏¢‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô! (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠)")
print("‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
print("‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:")
print("- ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° üî• ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î UI")
print("- ‡∏™‡πÅ‡∏Å‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô -> ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô -> ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏° -> ‡∏Ç‡πÇ‡∏°‡∏¢")
print("- ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ -> ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏° -> ‡∏Ç‡πÇ‡∏°‡∏¢")
